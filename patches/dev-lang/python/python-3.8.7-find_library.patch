--- Python-3.8.7/Lib/ctypes/util.py
+++ Python-3.8.7/Lib/ctypes/util.py
@@ -326,8 +326,8 @@ elif os.name == "posix":
 
         def find_library(name):
             # See issue #9998
-            return _findSoname_ldconfig(name) or \
-                   _get_soname(_findLib_gcc(name)) or _get_soname(_findLib_ld(name))
+            # https://github.com/python/cpython/pull/18380
+            return f'lib{name}.so'
 
 ################################################################
 # test code
--- Python-3.8.7/Lib/ctypes/test/test_find.py
+++ Python-3.8.7/Lib/ctypes/test/test_find.py
@@ -68,7 +68,7 @@ class Test_OpenGL_libs(unittest.TestCase):
     def test_shell_injection(self):
         result = find_library('; echo Hello shell > ' + os_helper.TESTFN)
         self.assertFalse(os.path.lexists(os_helper.TESTFN))
-        self.assertIsNone(result)
+        # self.assertIsNone(result)
 
 
 @unittest.skipUnless(sys.platform.startswith('linux'),
@@ -99,7 +99,7 @@ class FindLibraryLinux(unittest.TestCase):
             self.assertTrue(os.path.exists(dstname))
             # now check that the .so can't be found (since not in
             # LD_LIBRARY_PATH)
-            self.assertIsNone(find_library(libname))
+            # self.assertIsNone(find_library(libname))
             # now add the location to LD_LIBRARY_PATH
             with os_helper.EnvironmentVarGuard() as env:
                 KEY = 'LD_LIBRARY_PATH'
