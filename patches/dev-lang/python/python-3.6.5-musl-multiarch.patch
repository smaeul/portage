--- Python-3.6.5/configure.ac
+++ Python-3.6.5/configure.ac
@@ -767,98 +767,98 @@ cat >> conftest.c <<EOF
     # Android is not a multiarch system.
 #elif defined(__linux__)
 # if defined(__x86_64__) && defined(__LP64__)
-        x86_64-linux-gnu
+        x86_64-linux-musl
 # elif defined(__x86_64__) && defined(__ILP32__)
-        x86_64-linux-gnux32
+        x86_64-linux-muslx32
 # elif defined(__i386__)
-        i386-linux-gnu
+        i386-linux-musl
 # elif defined(__aarch64__) && defined(__AARCH64EL__)
 #  if defined(__ILP32__)
-        aarch64_ilp32-linux-gnu
+        aarch64_ilp32-linux-musl
 #  else
-        aarch64-linux-gnu
+        aarch64-linux-musl
 #  endif
 # elif defined(__aarch64__) && defined(__AARCH64EB__)
 #  if defined(__ILP32__)
-        aarch64_be_ilp32-linux-gnu
+        aarch64_be_ilp32-linux-musl
 #  else
-        aarch64_be-linux-gnu
+        aarch64_be-linux-musl
 #  endif
 # elif defined(__alpha__)
-        alpha-linux-gnu
+        alpha-linux-musl
 # elif defined(__ARM_EABI__) && defined(__ARM_PCS_VFP)
 #  if defined(__ARMEL__)
-        arm-linux-gnueabihf
+        arm-linux-musleabihf
 #  else
-        armeb-linux-gnueabihf
+        armeb-linux-musleabihf
 #  endif
 # elif defined(__ARM_EABI__) && !defined(__ARM_PCS_VFP)
 #  if defined(__ARMEL__)
-        arm-linux-gnueabi
+        arm-linux-musleabi
 #  else
-        armeb-linux-gnueabi
+        armeb-linux-musleabi
 #  endif
 # elif defined(__hppa__)
-        hppa-linux-gnu
+        hppa-linux-musl
 # elif defined(__ia64__)
-        ia64-linux-gnu
+        ia64-linux-musl
 # elif defined(__m68k__) && !defined(__mcoldfire__)
-        m68k-linux-gnu
+        m68k-linux-musl
 # elif defined(__mips_hard_float) && defined(_MIPSEL)
 #  if _MIPS_SIM == _ABIO32
-        mipsel-linux-gnu
+        mipsel-linux-musl
 #  elif _MIPS_SIM == _ABIN32
-        mips64el-linux-gnuabin32
+        mips64el-linux-muslabin32
 #  elif _MIPS_SIM == _ABI64
-        mips64el-linux-gnuabi64
+        mips64el-linux-muslabi64
 #  else
 #   error unknown platform triplet
 #  endif
 # elif defined(__mips_hard_float)
 #  if _MIPS_SIM == _ABIO32
-        mips-linux-gnu
+        mips-linux-musl
 #  elif _MIPS_SIM == _ABIN32
-        mips64-linux-gnuabin32
+        mips64-linux-muslabin32
 #  elif _MIPS_SIM == _ABI64
-        mips64-linux-gnuabi64
+        mips64-linux-muslabi64
 #  else
 #   error unknown platform triplet
 #  endif
 # elif defined(__or1k__)
-        or1k-linux-gnu
+        or1k-linux-musl
 # elif defined(__powerpc__) && defined(__SPE__)
-        powerpc-linux-gnuspe
+        powerpc-linux-muslspe
 # elif defined(__powerpc64__)
 #  if defined(__LITTLE_ENDIAN__)
-        powerpc64le-linux-gnu
+        powerpc64le-linux-musl
 #  else
-        powerpc64-linux-gnu
+        powerpc64-linux-musl
 #  endif
 # elif defined(__powerpc__)
-        powerpc-linux-gnu
+        powerpc-linux-musl
 # elif defined(__s390x__)
-        s390x-linux-gnu
+        s390x-linux-musl
 # elif defined(__s390__)
-        s390-linux-gnu
+        s390-linux-musl
 # elif defined(__sh__) && defined(__LITTLE_ENDIAN__)
-        sh4-linux-gnu
+        sh4-linux-musl
 # elif defined(__sparc__) && defined(__arch64__)
-        sparc64-linux-gnu
+        sparc64-linux-musl
 # elif defined(__sparc__)
-        sparc-linux-gnu
+        sparc-linux-musl
 # else
 #   error unknown platform triplet
 # endif
 #elif defined(__FreeBSD_kernel__)
 # if defined(__LP64__)
-        x86_64-kfreebsd-gnu
+        x86_64-kfreebsd-musl
 # elif defined(__i386__)
-        i386-kfreebsd-gnu
+        i386-kfreebsd-musl
 # else
 #   error unknown platform triplet
 # endif
 #elif defined(__gnu_hurd__)
-        i386-gnu
+        i386-musl
 #elif defined(__APPLE__)
         darwin
 #else
--- Python-3.6.5/Lib/test/test_sysconfig.py
+++ Python-3.6.5/Lib/test/test_sysconfig.py
@@ -398,11 +398,11 @@ class TestSysConfig(unittest.TestCase):
             self.assertTrue('linux' in suffix, suffix)
         if re.match('(i[3-6]86|x86_64)$', machine):
             if ctypes.sizeof(ctypes.c_char_p()) == 4:
-                self.assertTrue(suffix.endswith('i386-linux-gnu.so') or
-                                suffix.endswith('x86_64-linux-gnux32.so'),
+                self.assertTrue(suffix.endswith('i386-linux-musl.so') or
+                                suffix.endswith('x86_64-linux-muslx32.so'),
                                 suffix)
             else: # 8 byte pointer size
-                self.assertTrue(suffix.endswith('x86_64-linux-gnu.so'), suffix)
+                self.assertTrue(suffix.endswith('x86_64-linux-musl.so'), suffix)
 
     @unittest.skipUnless(sys.platform == 'darwin', 'OS X-specific test')
     def test_osx_ext_suffix(self):
