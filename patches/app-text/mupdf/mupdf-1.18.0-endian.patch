--- mupdf-1.18.0-source/source/fitz/draw-paint.c
+++ mupdf-1.18.0-source/source/fitz/draw-paint.c
@@ -6,6 +6,7 @@
 
 #include <string.h>
 #include <assert.h>
+#include <endian.h>
 
 /*
 
@@ -1084,9 +1085,9 @@ template_span_with_mask_3_general(byte * FZ_RESTRICT dp, const byte * FZ_RESTRIC
 		else if (a)
 		{
 			const uint32_t mask = 0x00ff00ff;
-			uint32_t d0 = *(uint32_t *)dp;
+			uint32_t d0 = htole32(*(uint32_t *)dp);
 			uint32_t d1 = d0>>8;
-			uint32_t s0 = *(uint32_t *)sp;
+			uint32_t s0 = htole32(*(uint32_t *)sp);
 			uint32_t s1 = s0>>8;
 			d0 &= mask;
 			d1 &= mask;
@@ -1098,7 +1099,7 @@ template_span_with_mask_3_general(byte * FZ_RESTRICT dp, const byte * FZ_RESTRIC
 			assert((d0>>24) >= (d0 & 0xff));
 			assert((d0>>24) >= ((d0>>8) & 0xff));
 			assert((d0>>24) >= ((d0>>16) & 0xff));
-			*(uint32_t *)dp = d0;
+			*(uint32_t *)dp = le32toh(d0);
 			sp += 4;
 			dp += 4;
 		}
@@ -1160,9 +1161,9 @@ template_span_with_mask_4_general(byte * FZ_RESTRICT dp, const byte * FZ_RESTRIC
 		else
 		{
 			const uint32_t mask = 0x00ff00ff;
-			uint32_t d0 = *(uint32_t *)dp;
+			uint32_t d0 = htole32(*(uint32_t *)dp);
 			uint32_t d1 = d0>>8;
-			uint32_t s0 = *(uint32_t *)sp;
+			uint32_t s0 = htole32(*(uint32_t *)sp);
 			uint32_t s1 = s0>>8;
 			sp += 4;
 			d0 &= mask;
@@ -1172,7 +1173,7 @@ template_span_with_mask_4_general(byte * FZ_RESTRICT dp, const byte * FZ_RESTRIC
 			d0 = (((d0<<8) + (s0-d0)*ma)>>8) & mask;
 			d1 = ((d1<<8) + (s1-d1)*ma) & ~mask;
 			d0 |= d1;
-			*(uint32_t *)dp = d0;
+			*(uint32_t *)dp = le32toh(d0);
 			dp += 4;
 		}
 	}
