From 826ade09cfb507b7315bbbb58e619beae1dac3cc Mon Sep 17 00:00:00 2001
From: Paul Kehrer <paul.l.kehrer@gmail.com>
Date: Wed, 16 Oct 2019 07:28:54 +0800
Subject: [PATCH] what will this do

---
 src/_cffi_src/openssl/ec.py                    |  2 ++
 src/cryptography/hazmat/backends/openssl/ec.py | 15 ++++++++++++---
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/src/_cffi_src/openssl/ec.py b/src/_cffi_src/openssl/ec.py
index 258afa2117..52f6001438 100644
--- a/src/_cffi_src/openssl/ec.py
+++ b/src/_cffi_src/openssl/ec.py
@@ -105,6 +105,8 @@
 int EC_METHOD_get_field_type(const EC_METHOD *);
 
 const char *EC_curve_nid2nist(int);
+
+int EC_GROUP_get_asn1_flag(const EC_GROUP *);
 """
 
 CUSTOMIZATIONS = """
diff --git a/src/cryptography/hazmat/backends/openssl/ec.py b/src/cryptography/hazmat/backends/openssl/ec.py
index 2ca48091da..9f100822b1 100644
--- a/src/cryptography/hazmat/backends/openssl/ec.py
+++ b/src/cryptography/hazmat/backends/openssl/ec.py
@@ -34,7 +34,16 @@ def _ec_key_curve_sn(backend, ec_key):
     # an error for now.
     if nid == backend._lib.NID_undef:
         raise NotImplementedError(
-            "ECDSA certificates with unnamed curves are unsupported "
+            "ECDSA keys with unnamed curves are unsupported "
+            "at this time"
+        )
+
+    # This is like the above check, but it also catches the case where you
+    # explicitly encoded a curve with the same parameters as a named curve.
+    # Don't do that.
+    if backend._lib.EC_GROUP_get_asn1_flag(group) == 0:
+        raise NotImplementedError(
+            "ECDSA keys with unnamed curves are unsupported "
             "at this time"
         )
 
@@ -127,12 +136,12 @@ def verify(self):
 class _EllipticCurvePrivateKey(object):
     def __init__(self, backend, ec_key_cdata, evp_pkey):
         self._backend = backend
-        _mark_asn1_named_ec_curve(backend, ec_key_cdata)
         self._ec_key = ec_key_cdata
         self._evp_pkey = evp_pkey
 
         sn = _ec_key_curve_sn(backend, ec_key_cdata)
         self._curve = _sn_to_elliptic_curve(backend, sn)
+        _mark_asn1_named_ec_curve(backend, ec_key_cdata)
 
     curve = utils.read_only_property("_curve")
 
@@ -229,12 +238,12 @@ def sign(self, data, signature_algorithm):
 class _EllipticCurvePublicKey(object):
     def __init__(self, backend, ec_key_cdata, evp_pkey):
         self._backend = backend
-        _mark_asn1_named_ec_curve(backend, ec_key_cdata)
         self._ec_key = ec_key_cdata
         self._evp_pkey = evp_pkey
 
         sn = _ec_key_curve_sn(backend, ec_key_cdata)
         self._curve = _sn_to_elliptic_curve(backend, sn)
+        _mark_asn1_named_ec_curve(backend, ec_key_cdata)
 
     curve = utils.read_only_property("_curve")
 
From 64fadb988c7ba9e0f2f25aa5d7fdb417282e55c4 Mon Sep 17 00:00:00 2001
From: Paul Kehrer <paul.l.kehrer@gmail.com>
Date: Wed, 16 Oct 2019 07:40:12 +0800
Subject: [PATCH] only do this check for 1.1.0+

---
 src/cryptography/hazmat/backends/openssl/ec.py | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/cryptography/hazmat/backends/openssl/ec.py b/src/cryptography/hazmat/backends/openssl/ec.py
index 9f100822b1..3d8681b43e 100644
--- a/src/cryptography/hazmat/backends/openssl/ec.py
+++ b/src/cryptography/hazmat/backends/openssl/ec.py
@@ -41,7 +41,10 @@ def _ec_key_curve_sn(backend, ec_key):
     # This is like the above check, but it also catches the case where you
     # explicitly encoded a curve with the same parameters as a named curve.
     # Don't do that.
-    if backend._lib.EC_GROUP_get_asn1_flag(group) == 0:
+    if (
+        backend._lib.CRYPTOGRAPHY_OPENSSL_110_OR_GREATER and
+        backend._lib.EC_GROUP_get_asn1_flag(group) == 0
+    ):
         raise NotImplementedError(
             "ECDSA keys with unnamed curves are unsupported "
             "at this time"
