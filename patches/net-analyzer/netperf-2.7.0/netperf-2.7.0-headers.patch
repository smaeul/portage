--- netperf-2.7.0/src/netlib.c
+++ netperf-2.7.0/src/netlib.c
@@ -2266,6 +2266,20 @@ shutdown_control()
 
 }
 
+#if HAVE_PROCESSOR_BIND
+#include <sys/types.h>
+#include <sys/processor.h>
+#include <sys/procset.h>
+#elif HAVE_BINDPROCESSOR
+#include <sys/processor.h>
+#elif HAVE_SCHED_SETAFFINITY
+#include <sched.h>
+#elif HAVE_BIND_TO_CPU_ID
+#include <sys/types.h>
+#include <sys/resource.h>
+#include <sys/processor.h>
+#endif
+
 /*
   bind_to_specific_processor will bind the calling process to the
   processor in "processor"  It has lots of ugly ifdefs to deal with
@@ -2296,12 +2310,8 @@ bind_to_specific_processor(int processor_affinity, int use_cpu_map)
      status and pass-along notification of error... raj 2004/12/13 */
   mpctl(MPC_SETPROCESS_FORCE, mapped_affinity, getpid());
 #elif HAVE_PROCESSOR_BIND
-#include <sys/types.h>
-#include <sys/processor.h>
-#include <sys/procset.h>
   processor_bind(P_PID,P_MYID,mapped_affinity,NULL);
 #elif HAVE_BINDPROCESSOR
-#include <sys/processor.h>
   /* this is the call on AIX.  It takes a "what" of BINDPROCESS or
      BINDTHRAD, then "who" and finally "where" which is a CPU number
      or it seems PROCESSOR_CLASS_ANY there also seems to be a mycpu()
@@ -2312,7 +2322,6 @@ bind_to_specific_processor(int processor_affinity, int use_cpu_map)
      value will not tell you if you are bound vs unbound. */
   bindprocessor(BINDPROCESS,getpid(),(cpu_t)mapped_affinity);
 #elif HAVE_SCHED_SETAFFINITY
-#include <sched.h>
   /* in theory this should cover systems with more CPUs than bits in a
      long, without having to specify __USE_GNU.  we "cheat" by taking
      defines from /usr/include/bits/sched.h, which we ass-u-me is
@@ -2331,10 +2340,10 @@ bind_to_specific_processor(int processor_affinity, int use_cpu_map)
 #endif
   typedef cpu_set_t netperf_cpu_set_t;
 #else
-#define NETPERF_CPU_SETSIZE sizeof(unsigned long)
-#define NETPERF_CPU_SET(cpu, cpusetp) *cpusetp = 1 << cpu
-#define NETPERF_CPU_ZERO(cpusetp) *cpusetp = (unsigned long)0
-  typedef unsigned long netperf_cpu_set_t;
+#define NETPERF_CPU_SETSIZE CPU_SETSIZE
+#define NETPERF_CPU_SET(cpu, cpusetp) CPU_SET(cpu, cpusetp)
+#define NETPERF_CPU_ZERO(cpusetp) CPU_ZERO(cpusetp)
+  typedef cpu_set_t netperf_cpu_set_t;
 #endif
 
   netperf_cpu_set_t   netperf_cpu_set;
@@ -2362,10 +2371,6 @@ bind_to_specific_processor(int processor_affinity, int use_cpu_map)
 
 #elif HAVE_BIND_TO_CPU_ID
   /* this is the one for Tru64 */
-#include <sys/types.h>
-#include <sys/resource.h>
-#include <sys/processor.h>
-
   /* really should be checking a return code one of these days. raj
      2005/08/31 */
 
